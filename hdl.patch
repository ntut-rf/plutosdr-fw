diff --git a/library/axi_ad9361/axi_ad9361_rx.v b/library/axi_ad9361/axi_ad9361_rx.v
index eef67817..e641c2b3 100644
--- a/library/axi_ad9361/axi_ad9361_rx.v
+++ b/library/axi_ad9361/axi_ad9361_rx.v
@@ -261,6 +261,7 @@ module axi_ad9361_rx #(
 
   // channel 2 (i)
 
+  generate if (MODE_1R1T == 0) begin
   axi_ad9361_rx_channel #(
     .Q_OR_I_N (0),
     .CHANNEL_ID (2),
@@ -295,9 +296,12 @@ module axi_ad9361_rx #(
     .up_raddr (up_raddr),
     .up_rdata (up_rdata_s[2]),
     .up_rack (up_rack_s[2]));
+  end
+  endgenerate
 
   // channel 3 (q)
 
+  generate if (MODE_1R1T == 0) begin
   axi_ad9361_rx_channel #(
     .Q_OR_I_N (1),
     .CHANNEL_ID (3),
@@ -332,6 +336,8 @@ module axi_ad9361_rx #(
     .up_raddr (up_raddr),
     .up_rdata (up_rdata_s[3]),
     .up_rack (up_rack_s[3]));
+  end
+  endgenerate
 
   // common processor control
 
diff --git a/library/axi_ad9361/axi_ad9361_tx.v b/library/axi_ad9361/axi_ad9361_tx.v
index 434db47f..4dcef8e4 100644
--- a/library/axi_ad9361/axi_ad9361_tx.v
+++ b/library/axi_ad9361/axi_ad9361_tx.v
@@ -286,6 +286,7 @@ module axi_ad9361_tx #(
 
   // dac channel
 
+  generate if (MODE_1R1T == 0) begin
   axi_ad9361_tx_channel #(
     .CHANNEL_ID (2),
     .Q_OR_I_N (0),
@@ -318,9 +319,12 @@ module axi_ad9361_tx #(
     .up_raddr (up_raddr),
     .up_rdata (up_rdata_s[2]),
     .up_rack (up_rack_s[2]));
+  end
+  endgenerate
 
   // dac channel
 
+  generate if (MODE_1R1T == 0) begin
   axi_ad9361_tx_channel #(
     .CHANNEL_ID (3),
     .Q_OR_I_N (1),
@@ -353,6 +357,8 @@ module axi_ad9361_tx #(
     .up_raddr (up_raddr),
     .up_rdata (up_rdata_s[3]),
     .up_rack (up_rack_s[3]));
+  end
+  endgenerate
 
   // dac common processor interface
 
diff --git a/projects/scripts/adi_board.tcl b/projects/scripts/adi_board.tcl
index 2c541bc3..1f4cca96 100644
--- a/projects/scripts/adi_board.tcl
+++ b/projects/scripts/adi_board.tcl
@@ -420,7 +420,7 @@ proc ad_mem_hpx_interconnect {p_sel p_clk p_name} {
 
   if {$p_sel eq "MEM"} {
     if {$sys_mem_interconnect_index < 0} {
-      ad_ip_instance smartconnect axi_mem_interconnect
+      ad_ip_instance axi_interconnect axi_mem_interconnect
     }
     set m_interconnect_index $sys_mem_interconnect_index
     set m_interconnect_cell [get_bd_cells axi_mem_interconnect]
@@ -431,7 +431,7 @@ proc ad_mem_hpx_interconnect {p_sel p_clk p_name} {
     if {$sys_hp0_interconnect_index < 0} {
       set p_name_int sys_ps7/S_AXI_HP0
       set_property CONFIG.PCW_USE_S_AXI_HP0 {1} [get_bd_cells sys_ps7]
-      ad_ip_instance smartconnect axi_hp0_interconnect
+      ad_ip_instance axi_interconnect axi_hp0_interconnect
     }
     set m_interconnect_index $sys_hp0_interconnect_index
     set m_interconnect_cell [get_bd_cells axi_hp0_interconnect]
@@ -442,7 +442,7 @@ proc ad_mem_hpx_interconnect {p_sel p_clk p_name} {
     if {$sys_hp1_interconnect_index < 0} {
       set p_name_int sys_ps7/S_AXI_HP1
       set_property CONFIG.PCW_USE_S_AXI_HP1 {1} [get_bd_cells sys_ps7]
-      ad_ip_instance smartconnect axi_hp1_interconnect
+      ad_ip_instance axi_interconnect axi_hp1_interconnect
     }
     set m_interconnect_index $sys_hp1_interconnect_index
     set m_interconnect_cell [get_bd_cells axi_hp1_interconnect]
@@ -453,7 +453,7 @@ proc ad_mem_hpx_interconnect {p_sel p_clk p_name} {
     if {$sys_hp2_interconnect_index < 0} {
       set p_name_int sys_ps7/S_AXI_HP2
       set_property CONFIG.PCW_USE_S_AXI_HP2 {1} [get_bd_cells sys_ps7]
-      ad_ip_instance smartconnect axi_hp2_interconnect
+      ad_ip_instance axi_interconnect axi_hp2_interconnect
     }
     set m_interconnect_index $sys_hp2_interconnect_index
     set m_interconnect_cell [get_bd_cells axi_hp2_interconnect]
@@ -464,7 +464,7 @@ proc ad_mem_hpx_interconnect {p_sel p_clk p_name} {
     if {$sys_hp3_interconnect_index < 0} {
       set p_name_int sys_ps7/S_AXI_HP3
       set_property CONFIG.PCW_USE_S_AXI_HP3 {1} [get_bd_cells sys_ps7]
-      ad_ip_instance smartconnect axi_hp3_interconnect
+      ad_ip_instance axi_interconnect axi_hp3_interconnect
     }
     set m_interconnect_index $sys_hp3_interconnect_index
     set m_interconnect_cell [get_bd_cells axi_hp3_interconnect]
@@ -475,7 +475,7 @@ proc ad_mem_hpx_interconnect {p_sel p_clk p_name} {
     if {$sys_hp0_interconnect_index < 0} {
       set p_name_int sys_ps8/S_AXI_HP0_FPD
       set_property CONFIG.PSU__USE__S_AXI_GP2 {1} [get_bd_cells sys_ps8]
-      ad_ip_instance smartconnect axi_hp0_interconnect
+      ad_ip_instance axi_interconnect axi_hp0_interconnect
     }
     set m_interconnect_index $sys_hp0_interconnect_index
     set m_interconnect_cell [get_bd_cells axi_hp0_interconnect]
@@ -486,7 +486,7 @@ proc ad_mem_hpx_interconnect {p_sel p_clk p_name} {
     if {$sys_hp1_interconnect_index < 0} {
       set p_name_int sys_ps8/S_AXI_HP1_FPD
       set_property CONFIG.PSU__USE__S_AXI_GP3 {1} [get_bd_cells sys_ps8]
-      ad_ip_instance smartconnect axi_hp1_interconnect
+      ad_ip_instance axi_interconnect axi_hp1_interconnect
     }
     set m_interconnect_index $sys_hp1_interconnect_index
     set m_interconnect_cell [get_bd_cells axi_hp1_interconnect]
@@ -497,7 +497,7 @@ proc ad_mem_hpx_interconnect {p_sel p_clk p_name} {
     if {$sys_hp2_interconnect_index < 0} {
       set p_name_int sys_ps8/S_AXI_HP2_FPD
       set_property CONFIG.PSU__USE__S_AXI_GP4 {1} [get_bd_cells sys_ps8]
-      ad_ip_instance smartconnect axi_hp2_interconnect
+      ad_ip_instance axi_interconnect axi_hp2_interconnect
     }
     set m_interconnect_index $sys_hp2_interconnect_index
     set m_interconnect_cell [get_bd_cells axi_hp2_interconnect]
@@ -508,7 +508,7 @@ proc ad_mem_hpx_interconnect {p_sel p_clk p_name} {
     if {$sys_hp3_interconnect_index < 0} {
       set p_name_int sys_ps8/S_AXI_HP3_FPD
       set_property CONFIG.PSU__USE__S_AXI_GP5 {1} [get_bd_cells sys_ps8]
-      ad_ip_instance smartconnect axi_hp3_interconnect
+      ad_ip_instance axi_interconnect axi_hp3_interconnect
     }
     set m_interconnect_index $sys_hp3_interconnect_index
     set m_interconnect_cell [get_bd_cells axi_hp3_interconnect]
diff --git a/projects/scripts/adi_project_xilinx.tcl b/projects/scripts/adi_project_xilinx.tcl
index 5393f002..f4279d15 100644
--- a/projects/scripts/adi_project_xilinx.tcl
+++ b/projects/scripts/adi_project_xilinx.tcl
@@ -47,6 +47,7 @@ set p_prcfg_status ""
 #
 proc adi_project {project_name {mode 0} {parameter_list {}} } {
 
+  global lib_dirs
   global ad_hdl_dir
   global ad_ghdl_dir
   global p_board
@@ -136,7 +137,7 @@ proc adi_project {project_name {mode 0} {parameter_list {}} } {
     set_property board_part $p_board [current_project]
   }
 
-  set lib_dirs $ad_hdl_dir/library
+  lappend lib_dirs $ad_hdl_dir/library
   if {$ad_hdl_dir ne $ad_ghdl_dir} {
     lappend lib_dirs $ad_ghdl_dir/library
   }
@@ -149,6 +150,7 @@ proc adi_project {project_name {mode 0} {parameter_list {}} } {
     config_ip_cache -import_from_project -use_cache_location $ad_hdl_dir/ipcache
   }
 
+  puts "$lib_dirs"
   set_property ip_repo_paths $lib_dirs [current_fileset]
   update_ip_catalog
 
